[project]
name = "recipe-arts"
version = "0.1.0"
description = ""
authors = [
    {name = "LazyFoxx",email = "chernomor987654321@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.13, <3.14"
dependencies = [
    "fastapi (>=0.115.12,<0.116.0)",
    "uvicorn (>=0.34.2,<0.35.0)",
    "sqlalchemy (>=2.0.41,<3.0.0)",
    "pydantic[email] (>=2.11.4,<3.0.0)",
    "pydantic-settings (>=2.9.1,<3.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "alembic (>=1.15.2,<2.0.0)",
    "passlib[bcrypt] (>=1.7.4,<2.0.0)",
    "redis (>=6.2.0,<7.0.0)",
    "aiosmtplib (>=4.0.1,<5.0.0)",
    "python-jose (>=3.5.0,<4.0.0)",
    "cryptography (>=45.0.3,<46.0.0)",
    "mypy (>=1.16.0,<2.0.0)"
]

[tool.poetry]
name = "recipe-arts-website" # Из вашего [project]
version = "0.1.0"    # Из вашего [project]
description = ""     # Из вашего [project]
authors = ["LazyFoxx <chernomor987654321@gmail.com>"] # Из вашего [project]
license = "MIT"      # Из вашего [project] (обычно указывается только имя лицензии)
readme = "README.md" # Из вашего [project]
package-mode = false

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.9"
black = "^25.1.0"
mypy = "^1.15.0"
pytest = "^8.3.5"
pre-commit = { version = "^4.2.0", python = ">=3.9" }

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 88
target-version = ['py313']  # тут пример под питон 3.11
extend-exclude = '''
    (venv,
    alembic,
    docker,
    .git,
    __pycache__)
'''

[tool.ruff]
line-length = 88
target-version = "py313"
exclude = [".venv", "tests", "__pycache__", "migration", "pgdata"]
select = [
    "E",  # Ошибки PEP 8
    "F",  # Ошибки Pyflakes (неиспользуемые переменные, импорты)
    "W",  # Предупреждения PEP 8
    "I",  # Проверка импортов
    "N",  # Проверка именования (PEP 8)
    "D",  # Проверка docstrings
]
fix = true
ignore = ["D100", "D104", "D105"]

[tool.mypy]
python_version = "3.13"
strict = true
ignore_missing_imports = true
disallow_untyped_defs = true
exclude = ["tests/", ".venv/", "__pycache__/"]